<?php
namespace App\Http\Controllers\API;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Hash;
use App\User;

class AuthController extends Controller
{
      /**
        * @OA\Post(
        * path="/api/register",
        * operationId="Register",
        * tags={"Register"},
        * summary="User Register",
        * description="User Register here",
        *     @OA\RequestBody(
        *         @OA\JsonContent(),
        *         @OA\MediaType(
        *            mediaType="multipart/form-data",
        *            @OA\Schema(
        *               type="object",
        *               required={"name","email", "password", "password_confirmation"},
        *               @OA\Property(property="name", type="text"),
        *               @OA\Property(property="email", type="text"),
        *               @OA\Property(property="password", type="password"),
        *               @OA\Property(property="password_confirmation", type="password")
        *            ),
        *        ),
        *    ),
        *      @OA\Response(
        *          response=201,
        *          description="Register Successfully",
        *          @OA\JsonContent()
        *       ),
        *      @OA\Response(
        *          response=200,
        *          description="Register Successfully",
        *          @OA\JsonContent()
        *       ),
        *      @OA\Response(
        *          response=422,
        *          description="Unprocessable Entity",
        *          @OA\JsonContent()
        *       ),
        *      @OA\Response(response=400, description="Bad request"),
        *      @OA\Response(response=404, description="Resource Not Found"),
        * )
        */
      public function register(Request $request)
      {
          $validated = $request->validate([
              'name' => 'required',
              'email' => 'required|email|unique:users',
              'password' => 'required|confirmed',
              'mobile_number' => 'required',
          ]);
          $data = $request->all();
          $data['password'] = Hash::make($data['password']);
          $user = User::create($data);
          $success['token'] =  $user->createToken('authToken')->accessToken;
          $success['name'] =  $user->name;
          return response()->json(['success' => $success]);
      }

      /**
        * @OA\Post(
        * path="/api/login",
        * operationId="authLogin",
        * tags={"Login"},
        * summary="User Login",
        * description="Login User Here",
        *     @OA\RequestBody(
        *         @OA\JsonContent(),
        *         @OA\MediaType(
        *            mediaType="multipart/form-data",
        *            @OA\Schema(
        *               type="object",
        *               required={"email", "password"},
        *               @OA\Property(property="email", type="email"),
        *               @OA\Property(property="password", type="password")
        *            ),
        *        ),
        *    ),
        *      @OA\Response(
        *          response=201,
        *          description="Login Successfully",
        *          @OA\JsonContent()
        *       ),
        *      @OA\Response(
        *          response=200,
        *          description="Login Successfully",
        *          @OA\JsonContent()
        *       ),
        *      @OA\Response(
        *          response=422,
        *          description="Unprocessable Entity",
        *          @OA\JsonContent()
        *       ),
        *      @OA\Response(response=400, description="Bad request"),
        *      @OA\Response(response=404, description="Resource Not Found"),
        * )
        */
      public function login(Request $request)
      {
          $validator = $request->validate([
              'email' => 'email|required',
              'password' => 'required'
          ]);
          if (!auth()->attempt($validator)) {
              return response()->json(['error' => 'Unauthorised'], 401);
          } else {
              $success['token'] = auth()->user()->createToken('authToken')->accessToken;
              $success['user'] = auth()->user();
              return response()->json(['success' => $success])->setStatusCode(200);
          }
      }


      /**
 * @OA\Get(
 *     path="/api/users/{id}",
 *     summary="Obtener informaci贸n de un usuario",
 *     description="Obtiene la informaci贸n de un usuario en el sistema",
 *     operationId="getUser",
 *     tags={"Usuarios"},
 *     @OA\Parameter(
 *         name="id",
 *         in="path",
 *         description="ID del usuario",
 *         required=true,
 *         @OA\Schema(
 *             type="integer",
 *             format="int64",
 *             example=1
 *         )
 *     ),
 *     @OA\Response(
 *         response=200,
 *         description="Informaci贸n del usuario obtenida exitosamente"
 *     ),
 *     @OA\Response(
 *         response=404,
 *         description="Usuario no encontrado"
 *     )
 * )
 */

}



  /**
   * @OA\Get(
   *     path="/api/v1/musicpro/send_email",
   *     summary="Envia un correo electronico",
   *     description="Envia correco electronico",
   *     operationId="send_email",
   *     tags={"Musicpro"},
   *     @OA\Parameter(
   *         name="asunto",
   *         in="path",
   *         description="Asunto del correo electronico",
   *         required=true,
   *         @OA\Schema(
   *             type="string",
   *             example='Correo muy importante'
   *         )
   *      ),
   *      @OA\Parameter(
   *         name="contenido",
   *         in="path",
   *         description="Contenido del correo electronico",
   *         required=true,
   *         @OA\Schema(
   *             type="string",
   *             example='hola como estas este es un correo de prueba'
   *         )
   *      ),
   *     @OA\Response(
   *         response=404,
   *         description="Respuesta de la endpoint not_found",
   *         @OA\JsonContent(
   *            @OA\Property(property="error", type="string", example="Not Found"),
   *            @OA\Property(property="message", type="string", example="El recurso solicitado no se encontr贸."),
   *        )
   *    ),
   *     @OA\Response(
   *         response=200,
   *         description="Saludo obtenido correctamente",
   *         @OA\JsonContent(
   *            @OA\Property(property="message", type="string", example="Hola como estas"),
   *        )
   *    )
   * )
   */
